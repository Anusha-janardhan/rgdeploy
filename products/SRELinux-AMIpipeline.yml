AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the ImageBuilder component, recipe, infra configuration, distribution configuration, and pipeline for Nice-Dcv for Research Gateway
Parameters:
  SourceBucketName:
    Type: String
  VPCId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnetId:
    Type: AWS::EC2::Subnet::Id
  MasterAMI:
    Type: AWS::EC2::Image::Id
    Default: "ami-0a2e6b088850ac621" 
  #AMI Name : DCV-AmazonLinux2-x86_64-2022.2.14521-NVIDIA-525.85.05-2023-02-16T12-18-39.181Z
  Ver:
    Type: String
    Default: "1.0.0"

Resources:
  #############
  # COMPONENTS
  #############
  ComponentConfigureOS:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "${AWS::StackName}-ConfigureOSComponent"
      Platform: "Linux"
      Version: !Ref Ver
      Description: "Configure Operating System Patches"
      Tags:
        Name: !Join ["-", [!Ref AWS::StackName, "ConfigureOS"]]
        ResourceType: "RLCatalyst-Research-Gateway"
      Data: |
        name: ConfigureOS
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: UpdateOS
                action: UpdateOS
  ComponentNicedcv:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "${AWS::StackName}-ComponentNicedcv"
      Platform: "Linux"
      Version: !Ref Ver
      Description: "Configure Nicedcv Server"
      Tags:
        Name: !Join ["-", [!Ref AWS::StackName, "ConfigureNicedcv"]]
        ResourceType: "RLCatalyst-Research-Gateway"
      Data: !Sub |
        name: Nicedcv-Provisioner
        description: This is the provisioner for Nicedcv for Research Gateway
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: AddFiles
                action: S3Download
                inputs:
                - source: "s3://${SourceBucketName}/Nicedcv.tar.gz"
                  destination: /tmp/Nicedcv.tar.gz
              - name: ExtractFiles
                action: ExecuteBash
                inputs:
                  commands:
                    - tar -xvzf /tmp/Nicedcv.tar.gz -C /tmp
                    - mkdir -p /tmp/cluster
                    - cp /tmp/Nicedcv/machine-images/config/infra/files/dcv/* /tmp/cluster
                    - bash /tmp/Nicedcv/machine-images/config/infra/provisioners/provision-dcv.sh
                              

  #############
  # RECIPE
  #############
  NicedcvImageRecipe:
    Type: "AWS::ImageBuilder::ImageRecipe"
    Properties:
      Name: !Sub "${AWS::StackName}-NicedcvImageRecipe"
      Version: !Ref Ver
      ParentImage: !Ref MasterAMI
      Description: !Sub "${AWS::StackName}-NicedcvImageRecipe"
      Components:
        - ComponentArn: !GetAtt ComponentConfigureOS.Arn
        - ComponentArn: !GetAtt ComponentNicedcv.Arn
      Tags:
        Name: !Join ["-", [!Ref AWS::StackName, "NicedcvImageRecipe"]]
        ResourceType: "RLCatalyst-Research-Gateway"      

  ###############
  # INFRA CONFIG
  ###############
  NicedcvInfraConfig:
    Type: "AWS::ImageBuilder::InfrastructureConfiguration"
    Properties:
      Name: !Sub "${AWS::StackName}-Nicedcv-InfraConfig"
      InstanceProfileName: !Ref ResearchGatewayImgBldrInstancePfl
      InstanceTypes:
        - "m5.large"
      TerminateInstanceOnFailure: True
      SecurityGroupIds:
        - !Ref ResearchGatewayImgBldrInstanceSG
      SubnetId: !Ref PrivateSubnetId
      Logging:
        S3Logs:
          S3BucketName: !Ref SourceBucketName
          S3KeyPrefix: !Join ["/", ["Logs", "RL_RG_Nicedcv", !Ref Ver]]
      Tags:
        Name: !Join ["-", [!Ref AWS::StackName, "NicedcvInfraConfig"]]
        ResourceType: "RLCatalyst-Research-Gateway"      

  ResearchGatewayImgBldrInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value:
            !Join ["-", [!Ref AWS::StackName, "BuildAMIInstanceSecurityGroup"]]
        - Key: ResourceType
          Value: "RLCatalyst-Research-Gateway"

  ResearchGatewayImgBldrInstancePfl:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref ResearchGatewayInstanceRole

  ResearchGatewayInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action:
              - sts:AssumeRole
      Path: /

  ###############
  # DISTRIBUTION
  ###############
  NicedcvDistributionConfiguration:
    Type: "AWS::ImageBuilder::DistributionConfiguration"
    Properties:
      Name: !Sub "${AWS::StackName}-NicedcvDistributionConfig"
      Description: "Nicedcv for RLCatalyst Research Gateway"
      Distributions:
        - Region: "us-east-2"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "us-east-1"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "us-west-2"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "us-west-1"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "ap-south-1"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "ap-southeast-1"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
        - Region: "ap-southeast-2"
          AmiDistributionConfiguration:
            Name: "Nicedcv {{ imagebuilder:buildDate }}"
            Description: "Nicedcv for RLCatalyst Research Gateway"
            AmiTags:
              RLCatalystProduct: "Nicedcv"
      Tags:
        Name: "Nicedcv"
        RLCatalystProduct: "Nicedcv"      

  ##############
  # PIPELINE
  ##############
  NicedcvImagePipeline:
    Type: "AWS::ImageBuilder::ImagePipeline"
    Properties:
      Name: "RL_RG_Nicedcv"
      Description: "Pipeline to build Nicedcv AMI for RLCatalyst Research Gateway"
      ImageRecipeArn: !Ref NicedcvImageRecipe
      InfrastructureConfigurationArn: !Ref NicedcvInfraConfig
      DistributionConfigurationArn: !Ref NicedcvDistributionConfiguration
      ImageTestsConfiguration:
        ImageTestsEnabled: false
        TimeoutMinutes: 90
      Status: "ENABLED"
      Tags:
        Name: "RL_RG_Nicedcv"
        ResourceType: "RLCatalyst-Research-Gateway"      

Outputs:
  NicedcvImagePipeline:
    Description: Nicedcv Image Builder Pipeline
    Value: !Ref NicedcvImagePipeline
    Export:
      Name: !Sub "${AWS::StackName}-NicedcvPipelineName"