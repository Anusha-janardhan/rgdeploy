user nginx;
worker_processes auto;
pid /run/nginx.pid;


events {
  worker_connections 1024;
}


http {

  server_tokens off;
  server_name_in_redirect off;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # listens on port 80 and redirects traffic to secure alternative
  server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
  }

  server {
          
    # SSL configuration
    
    listen 443 ssl;
    ssl_certificate cert.pem;
    ssl_certificate_key cert.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:128m;
    add_header Strict-Transport-Security "max-age=31557600; includeSubDomains";
    ssl_stapling on;
    ssl_stapling_verify on;

    # Reroute traffic to rstudio server (i.e., reverse proxy for port 8787)
    location / {
      proxy_pass http://localhost:8787/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }

}